//变量用@
@t-width:300px;
body{
    margin: 0;
    background-color: pink;
}
#box{
    height: @t-width;
    width: @t-width;
    background-color: blue; 
}
//混合
#box2{
    #box;
    background-color: yellow;
}
//混合，可带参数
.border01(@border_width){   
    border: @border_width solid white;
}
.border03(@border_width:20px){
    border: @border_width solid white;
}
#box2{
    .border01(10px);
    .border03();
}

//可以让在做css3的一些兼容时很方便：例如
.border_radius(@radius){
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}

#box2{
    .border_radius(10px)
}


//匹配模式
//制作三角
.triangle(top,@w:5px,@c:black){
    border: @w solid transparent;
    border-top-color: @c; 
}
.triangle(left,@w:5px,@c:black){
    border: @w solid transparent;
    border-left-color: @c; 
}
.triangle(right,@w:5px,@c:black){
    border: @w solid transparent;
    border-right-color: @c; 
}
.triangle(bottom,@w:5px,@c:black){
    border: @w solid transparent;
    border-bottom-color: @c; 
}
.triangle(@_,@w:5px,@c:black){
    height: 0px;
    width: 0px;
    overflow: hidden;
}
#sjx{
    .triangle(right,20px,yellow);
}

//计算
@r:2px;
#box3{
    height: 100/@r;
    width: 100/@r;
    background-color: #2D2D2D
}


//嵌套
#list{
    margin: 0;
    padding: 0;
    list-style: none;
    width: 500px;
    border: 2px solid blue;
    .listl{
        border: 2px solid pink;
        .lib{
            height: 5px;
            background-color: gray;
        }
    }
}
a{
    color: black;
   &:hover{//&代表他的上一层选择器
       color: red;
   }
}

//避免编译~

